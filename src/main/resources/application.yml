
spring:
  application:
    name: gym

  profiles:
    active: local
  activemq:
    broker-url: tcp://localhost:61616
    user: admin
    password: admin
    packages:
      trust-all: true

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  sql:
    init:
      mode: always

  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

  security:
    enabled: true

server:
  port: 8080
gym:
  activemq:
    workload:
      queue: gym.workload.queue
      dlq: gym.workload.dlq
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}:${spring.application.instance_id:${random.value}}

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full

resilience4j:
  circuitbreaker:
    instances:
      workloadService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      workloadService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:postgresql://localhost:5431/postgres
    username: postgres
    password: mysecretpassword

  jpa:
    hibernate:
      ddl-auto: create

eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"

---
spring:
  config:
    activate:
      on-profile: test

  security:
    user:
      name: testUser
      password: testPass

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

eureka:
  client:
    enabled: false

logging:
  level:
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE